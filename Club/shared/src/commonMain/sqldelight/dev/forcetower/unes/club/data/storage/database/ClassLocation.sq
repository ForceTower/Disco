CREATE TABLE IF NOT EXISTS `ClassLocation` (
    `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    `groupId` INTEGER NOT NULL,
    `profileId` INTEGER NOT NULL,
    `startsAt` TEXT NOT NULL,
    `endsAt` TEXT NOT NULL,
    `day` TEXT NOT NULL,
    `room` TEXT,
    `modulo` TEXT,
    `campus` TEXT,
    `uuid` TEXT NOT NULL,
    `hiddenOnSchedule` INTEGER NOT NULL,
    `startsAtInt` INTEGER NOT NULL,
    `endsAtInt` INTEGER NOT NULL,
    `dayInt` INTEGER NOT NULL,
    FOREIGN KEY(`groupId`) REFERENCES `ClassGroup`(`id`) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(`profileId`) REFERENCES `Profile`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE UNIQUE INDEX IF NOT EXISTS `index_ClassLocation_group_id_day_starts_at_ends_at_profile_id` ON `ClassLocation` (`groupId`, `day`, `startsAt`, `endsAt`, `profileId`);
CREATE INDEX IF NOT EXISTS `index_ClassLocation_profile_id` ON `ClassLocation` (`profileId`);
CREATE UNIQUE INDEX IF NOT EXISTS `index_ClassLocation_uuid` ON `ClassLocation` (`uuid`);

insertIgnore:
INSERT OR IGNORE INTO `ClassLocation` (`id`,`groupId`,`profileId`,`startsAt`,`endsAt`,`day`,`room`,`modulo`,`campus`,`uuid`,`hiddenOnSchedule`,`startsAtInt`,`endsAtInt`,`dayInt`) VALUES (nullif(?, 0),?,?,?,?,?,?,?,?,?,?,?,?,?);

selectHiddenSchedule:
SELECT * FROM ClassLocation WHERE hiddenOnSchedule = 1;

wipeProfileSchedule:
DELETE FROM ClassLocation WHERE profileId = :profileId;

selectVisibleSchedule:
SELECT cl.* FROM ClassLocation cl, Profile p WHERE cl.profileId = p.id AND p.me = 1 AND cl.hiddenOnSchedule = 0;

setClassHidden:
UPDATE ClassLocation SET hiddenOnSchedule = :hide WHERE groupId = :groupId AND day = :day AND startsAt = :startsAt AND endsAt = :endsAt AND profileId = :profileId;